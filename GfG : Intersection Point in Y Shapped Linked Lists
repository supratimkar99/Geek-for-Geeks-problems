//Given two singly linked lists of size N and M, write a program to get the point where two linked lists intersect each other.

//The task is to complete the function intersetPoint() which finds the point of intersection of two linked list.
//The function should return data value of a node where two linked lists merge.
//If linked list do not merge at any point, then it should return -1.

//APPROACH : we multiply -1 with every element's data of first Linked List "headA"
             then we check each element of second linked list, the first negative element is the intersaction point.
             
class Intersect
{
	int intersectPoint(Node headA, Node headB)
	{
         // code here
         while(headA != null)
         {
             headA.data = headA.data*(-1) - 1;    // Subtracting 1 for the cases where required node's value is 0.
             headA = headA.next;
         }
        while(headB != null)
        {
            if(headB.data < 0)
                return headB.data*(-1) - 1;
                
            headB = headB.next;
        }
        return -1;
	}
}
