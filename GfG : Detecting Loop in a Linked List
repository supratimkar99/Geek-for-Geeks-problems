//Function to detect a loop in a singly linked list, given the head.

/*
class LinkedList { 
    Node head; // head of list 
  
    /* Linked list Node*/
    class Node { 
        int data; 
        Node next; 
        Node(int d) 
        { 
            data = d; 
            next = null; 
        } 
    }
*/

//Solution using : Floydâ€™s Cycle-Finding Algorithm
void detectLoop() 
{ 
    Node slow = head, fast = head; 
    int flag = 0; 
    while(slow != null && fast != null && fast.next != null)
    { 
        slow = slow.next; 
        fast = fast.next.next; 
        if (slow == fast)
        { 
            flag = 1; 
            break; 
        } 
    } 
        
    if(flag == 1) 
        System.out.println("Loop found"); 
    else
        System.out.println("Loop not found"); 
}
